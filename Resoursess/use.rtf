{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf100
{\fonttbl\f0\fnil\fcharset0 Menlo-Italic;\f1\fswiss\fcharset0 Helvetica;\f2\fnil\fcharset0 Menlo-Bold;
\f3\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red83\green101\blue121;\red255\green255\blue255;\red155\green35\blue147;
\red0\green0\blue0;\red92\green38\blue153;\red28\green0\blue207;\red57\green0\blue160;\red36\green82\blue86;
\red50\green109\blue116;\red196\green26\blue22;}
{\*\expandedcolortbl;;\csgenericrgb\c32401\c39745\c47507;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c60759\c13753\c57628;
\csgenericrgb\c0\c0\c0;\csgenericrgb\c35922\c14825\c60191;\csgenericrgb\c11000\c0\c81000;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c13924\c32052\c33684;
\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c77000\c10200\c8600;}
\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\i\fs24 \cf2 \cb3 //
\f1\i0 \cf0 \

\f0\i \cf2 //  ViewController.swift
\f1\i0 \cf0 \

\f0\i \cf2 //  ICSPullToRefreshDemo
\f1\i0 \cf0 \

\f0\i \cf2 //
\f1\i0 \cf0 \

\f0\i \cf2 //  Created by LEI on 3/15/15.
\f1\i0 \cf0 \

\f0\i \cf2 //  Copyright (c) 2015 TouchingAPP. All rights reserved.
\f1\i0 \cf0 \

\f0\i \cf2 //
\f1\i0 \cf0 \
\

\f2\b \cf4 import
\f3\b0 \cf5  UIKit
\f1 \cf0 \

\f2\b \cf4 import
\f3\b0 \cf5  ICSPullToRefresh
\f1 \cf0 \
\

\f2\b \cf4 class
\f3\b0 \cf5  ViewController: \cf6 UITableViewController\cf5  \{
\f1 \cf0 \

\f3 \cf5     
\f1 \cf0 \

\f0\i \cf2 //    lazy var tableView: UITableView = \{ [unowned self] in
\f1\i0 \cf0 \

\f0\i \cf2 //        let tableView = UITableView(frame: self.view.bounds, style: .Plain)
\f1\i0 \cf0 \

\f0\i \cf2 //        return tableView
\f1\i0 \cf0 \

\f0\i \cf2 //    \}()
\f1\i0 \cf0 \

\f3 \cf5     
\f1 \cf0 \

\f3 \cf5     
\f2\b \cf4 var
\f3\b0 \cf5  k = \cf7 0
\f1 \cf0 \

\f3 \cf5     
\f2\b \cf4 var
\f3\b0 \cf5  isPull = 
\f2\b \cf4 false
\f1\b0 \cf0 \
\

\f3 \cf5     
\f2\b \cf4 override
\f3\b0 \cf5  
\f2\b \cf4 func
\f3\b0 \cf5  viewDidLoad() \{
\f1 \cf0 \

\f3 \cf5         
\f2\b \cf4 super
\f3\b0 \cf5 .\cf8 viewDidLoad\cf5 ()
\f1 \cf0 \

\f3 \cf5         
\f0\i \cf2 // Do any additional setup after loading the view, typically from a nib.
\f1\i0 \cf0 \

\f0\i \cf2 //        view.addSubview(tableView)
\f1\i0 \cf0 \

\f3 \cf5         \cf6 tableView\cf5 .\cf6 dataSource\cf5  = 
\f2\b \cf4 self
\f1\b0 \cf0 \

\f3 \cf5     \}
\f1 \cf0 \

\f3 \cf5     
\f1 \cf0 \

\f3 \cf5     
\f2\b \cf4 override
\f3\b0 \cf5  
\f2\b \cf4 func
\f3\b0 \cf5  viewDidAppear(
\f2\b \cf4 _
\f3\b0 \cf5  animated: \cf6 Bool\cf5 ) \{
\f1 \cf0 \

\f3 \cf5         
\f2\b \cf4 super
\f3\b0 \cf5 .\cf8 viewDidAppear\cf5 (animated)
\f1 \cf0 \

\f3 \cf5         \cf6 tableView\cf5 .\cf9 addPullToRefreshHandler\cf5  \{ [weak 
\f2\b \cf4 self
\f3\b0 \cf5 ] 
\f2\b \cf4 in
\f1\b0 \cf0 \

\f3 \cf5             \cf6 DispatchQueue\cf5 .\cf8 global\cf5 (qos: .\cf8 userInitiated\cf5 ).\cf8 async\cf5 \{
\f1 \cf0 \

\f3 \cf5                 
\f0\i \cf2 //sleep(3)
\f1\i0 \cf0 \

\f3 \cf5                   
\f2\b \cf4 self
\f3\b0 \cf5 ?.\cf10 k\cf5  += \cf7 1
\f1 \cf0 \

\f3 \cf5                 
\f1 \cf0 \

\f3 \cf5                 
\f2\b \cf4 self
\f3\b0 \cf5 ?.\cf10 isPull\cf5  = 
\f2\b \cf4 true
\f1\b0 \cf0 \

\f3 \cf5                        
\f2\b \cf4 self
\f3\b0 \cf5 ?.\cf6 tableView\cf5 .\cf8 reloadData\cf5 ()
\f1 \cf0 \

\f3 \cf5                 \cf6 DispatchQueue\cf5 .\cf6 main\cf5 .\cf8 async\cf5  \{
\f1 \cf0 \

\f3 \cf5                     
\f2\b \cf4 self
\f3\b0 \cf5 ?.\cf6 tableView\cf5 .\cf10 pullToRefreshView\cf5 ?.\cf9 stopAnimating\cf5 ()
\f1 \cf0 \

\f3 \cf5                 \}
\f1 \cf0 \

\f3 \cf5             \}
\f1 \cf0 \

\f3 \cf5         \}
\f1 \cf0 \

\f3 \cf5         \cf6 DispatchQueue\cf5 .\cf6 main\cf5 .\cf8 asyncAfter\cf5 (deadline: \cf6 DispatchTime\cf5 .\cf8 now\cf5 () + \cf6 Double\cf5 ((\cf6 Int64\cf5 ) (\cf7 1\cf5  * \cf6 NSEC_PER_SEC\cf5 )) / \cf6 Double\cf5 (\cf6 NSEC_PER_SEC\cf5 )) \{ () -> \cf6 Void\cf5  
\f2\b \cf4 in
\f1\b0 \cf0 \

\f3 \cf5            
\f2\b \cf4 self
\f3\b0 \cf5 .\cf6 tableView\cf5 .\cf9 triggerPullToRefresh\cf5 ()
\f1 \cf0 \

\f3 \cf5         \}
\f1 \cf0 \

\f3 \cf5         
\f1 \cf0 \

\f3 \cf5         \cf6 tableView\cf5 .\cf9 addInfiniteScrollingWithHandler\cf5  \{ [weak 
\f2\b \cf4 self
\f3\b0 \cf5 ] 
\f2\b \cf4 in
\f1\b0 \cf0 \

\f3 \cf5             \cf6 DispatchQueue\cf5 .\cf8 global\cf5 (qos: .\cf8 userInitiated\cf5 ).\cf8 async\cf5  \{
\f1 \cf0 \

\f3 \cf5              
\f0\i \cf2 //   sleep(3)
\f1\i0 \cf0 \

\f3 \cf5                 \cf6 DispatchQueue\cf5 .\cf6 main\cf5 .\cf8 async\cf5  \{
\f1 \cf0 \

\f3 \cf5                                 
\f2\b \cf4 self
\f3\b0 \cf5 ?.\cf10 isPull\cf5  = 
\f2\b \cf4 false
\f1\b0 \cf0 \

\f3 \cf5                     
\f2\b \cf4 self
\f3\b0 \cf5 ?.\cf10 k\cf5  += \cf7 1
\f1 \cf0 \

\f3 \cf5                     
\f2\b \cf4 self
\f3\b0 \cf5 ?.\cf6 tableView\cf5 .\cf8 reloadData\cf5 ()
\f1 \cf0 \

\f3 \cf5                     
\f2\b \cf4 self
\f3\b0 \cf5 ?.\cf6 tableView\cf5 .\cf10 infiniteScrollingView\cf5 ?.\cf9 stopAnimating\cf5 ()
\f1 \cf0 \

\f3 \cf5                 \}
\f1 \cf0 \

\f3 \cf5             \}
\f1 \cf0 \

\f3 \cf5         \}
\f1 \cf0 \
\

\f3 \cf5     \}
\f1 \cf0 \
\

\f3 \cf5     
\f2\b \cf4 override
\f3\b0 \cf5  
\f2\b \cf4 func
\f3\b0 \cf5  tableView(
\f2\b \cf4 _
\f3\b0 \cf5  tableView: \cf6 UITableView\cf5 , numberOfRowsInSection section: \cf6 Int\cf5 ) -> \cf6 Int\cf5  \{
\f1 \cf0 \

\f3 \cf5         
\f2\b \cf4 return
\f3\b0 \cf5  \cf10 k
\f1 \cf0 \

\f3 \cf5     \}
\f1 \cf0 \

\f3 \cf5     
\f1 \cf0 \

\f3 \cf5     
\f2\b \cf4 override
\f3\b0 \cf5  
\f2\b \cf4 func
\f3\b0 \cf5  tableView(
\f2\b \cf4 _
\f3\b0 \cf5  tableView: \cf6 UITableView\cf5 , cellForRowAt indexPath: \cf6 IndexPath\cf5 ) -> \cf6 UITableViewCell\cf5  \{
\f1 \cf0 \

\f3 \cf5         
\f2\b \cf4 let
\f3\b0 \cf5  identifier = \cf11 "cell"
\f1 \cf0 \

\f3 \cf5         
\f2\b \cf4 var
\f3\b0 \cf5  cell = tableView.\cf8 dequeueReusableCell\cf5 (withIdentifier: identifier)
\f1 \cf0 \

\f3 \cf5         
\f2\b \cf4 if
\f3\b0 \cf5  cell == 
\f2\b \cf4 nil
\f3\b0 \cf5 \{
\f1 \cf0 \

\f3 \cf5             cell = \cf6 UITableViewCell\cf5 (style: .\cf8 value1\cf5 , reuseIdentifier: identifier)
\f1 \cf0 \

\f3 \cf5         \}
\f1 \cf0 \

\f3 \cf5         
\f2\b \cf4 if
\f3\b0 \cf5  \cf10 isPull\cf5  \{
\f1 \cf0 \

\f3 \cf5                  cell!.\cf6 textLabel\cf5 ?.\cf6 text\cf5  = \cf11 "up"
\f1 \cf0 \

\f3 \cf5         \}
\f2\b \cf4 else
\f3\b0 \cf5  \{
\f1 \cf0 \

\f3 \cf5             cell!.\cf6 textLabel\cf5 ?.\cf6 text\cf5  = \cf11 "down"
\f1 \cf0 \

\f3 \cf5         \}
\f1 \cf0 \

\f3 \cf5         
\f1 \cf0 \

\f3 \cf5    
\f1 \cf0 \

\f3 \cf5         
\f2\b \cf4 return
\f3\b0 \cf5  cell!
\f1 \cf0 \

\f3 \cf5     \}
\f1 \cf0 \
\
\

\f3 \cf5 \}
\f1 \cf0 \
\
}